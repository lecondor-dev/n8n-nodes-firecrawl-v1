openapi: 3.0.0
info:
  title: Firecrawl API
  description: API for crawling websites and extracting data with Firecrawl.
  version: 1.0.0
servers:
  - url: https://api.firecrawl.dev/v1
paths:
  /crawl:
    post:
      summary: Submit a crawl job
      description: Submits a job to crawl a URL and all accessible subpages.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The URL to crawl.
                limit:
                  type: integer
                  description: Limit the number of pages to crawl.
                excludePaths:
                  type: array
                  items:
                    type: string
                  description: List of paths to exclude from the crawl.
                allowBackwardLinks:
                  type: boolean
                  description: Allow crawling pages that are not direct descendants of the initial URL.
                webhook:
                  type: string
                  description: URL to send webhook events during the crawl process.
                scrapeOptions:
                  type: object
                  description: Scraping options
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                        enum:
                          - markdown
                          - html
                          - extract
                      description: Output format(s) for the scraped data.
                    extract:
                      type: object
                      properties:
                        schema:
                          type: string
                          description: The schema for structured data extraction.
                        systemPrompt:
                          type: string
                          description: The system prompt used for extraction.
                        prompt:
                          type: string
                          description: Extraction prompt without schema.
              required:
                - url
      responses:
        '200':
          description: Crawl job submitted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: string
                    description: The ID of the submitted crawl job.
                  url:
                    type: string
                    description: API endpoint to check the status of the crawl job.
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid API key.

  /crawl/{crawl_id}:
    get:
      summary: Check Crawl Job Status
      description: Check the status of a crawl job by its ID and retrieve the result.
      parameters:
        - name: crawl_id
          in: path
          required: true
          description: The ID of the crawl job.
          schema:
            type: string
      responses:
        '200':
          description: Crawl status retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The current status of the crawl (e.g., scraping, completed).
                  total:
                    type: integer
                    description: Total number of pages identified for crawling.
                  completed:
                    type: integer
                    description: Number of pages crawled so far.
                  creditsUsed:
                    type: integer
                    description: Credits used for this crawl.
                  expiresAt:
                    type: string
                    format: date-time
                    description: Expiry date for the crawl result.
                  next:
                    type: string
                    description: URL to retrieve the next portion of crawl data if the response is large.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        markdown:
                          type: string
                        html:
                          type: string
                        metadata:
                          type: object
                          properties:
                            title:
                              type: string
                            language:
                              type: string
                            sourceURL:
                              type: string
                            description:
                              type: string
                            ogLocaleAlternate:
                              type: array
                              items:
                                type: string
                            statusCode:
                              type: integer
                              description: HTTP status code of the crawled page.
        '404':
          description: Crawl job not found.
        '400':
          description: Bad request.

  /crawl/websocket:
    post:
      summary: Crawl URL with WebSocket Monitoring
      description: Initiate a crawl and monitor progress in real-time using WebSocket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The URL to crawl.
                excludePaths:
                  type: array
                  items:
                    type: string
                  description: List of paths to exclude from the crawl.
                limit:
                  type: integer
                  description: Limit the number of pages to crawl.
                scrapeOptions:
                  type: object
                  description: Scraping options
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                        enum:
                          - markdown
                          - html
                          - extract
                      description: Output format(s) for the scraped data.
                    extract:
                      type: object
                      properties:
                        schema:
                          type: string
                          description: The schema for structured data extraction.
                        systemPrompt:
                          type: string
                          description: The system prompt used for extraction.
                        prompt:
                          type: string
                          description: Extraction prompt without schema.
      responses:
        '200':
          description: WebSocket connection initiated successfully.
        '400':
          description: Bad request, invalid parameters.

  /crawl/webhook:
    post:
      summary: Submit a crawl job with a webhook
      description: Submits a job to crawl a URL and sends webhook events during the crawl process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The URL to crawl.
                limit:
                  type: integer
                  description: Limit the number of pages to crawl.
                webhook:
                  type: string
                  description: URL to send webhook events to.
                excludePaths:
                  type: array
                  items:
                    type: string
                  description: List of paths to exclude from the crawl.
                scrapeOptions:
                  type: object
                  description: Scraping options
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                        enum:
                          - markdown
                          - html
                          - extract
                      description: Output format(s) for the scraped data.
                    extract:
                      type: object
                      properties:
                        schema:
                          type: string
                          description: The schema for structured data extraction.
                        systemPrompt:
                          type: string
                          description: The system prompt used for extraction.
                        prompt:
                          type: string
                          description: Extraction prompt without schema.

              required:
                - url
      responses:
        '200':
          description: Crawl job with webhook submitted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: string
                    description: The ID of the crawl job.
                  webhook:
                    type: string
                    description: Webhook URL used during the crawl process.
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid API key.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
